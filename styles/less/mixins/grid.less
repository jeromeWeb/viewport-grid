@import "mixins.less";

// Vertical grid

.grid-column
{
	display: -webkit-flex;
	display: flex;
    -webkit-flex-flow: column wrap;
    flex-flow: column wrap;
        
    &.grid-gutters
    {
        [class^="h-"], [class*=" h-"]
        {
            padding: @grid-gutter-height/2 0;            
        }
    }
}


// heights

.loop-grid-heights(@index, @total:@index) when (@index > 0) {

  .h-@{index} {
      height: @index/@total*100vh;
      box-sizing: border-box;
      .fill-area();
  }
  
  // next iteration
  .loop-grid-heights((@index - 1), @total);
}

.loop-grid-heights(@grid-rows);

// horizontal grid

.grid-row
{
    display: -webkit-flex;
    display: flex;
    -webkit-flex-flow: row wrap;
    flex-flow: row wrap;
    height: 100%;
        
    &.grid-gutters
    {
        [class^="w-"], [class*=" w-"]
        {
            padding: 0 @grid-gutter-width/2;            
        }
    }
}

// widths

.loop-grid-widths(@index, @total:@index) when (@index > 0) {

  .w-@{index} {
      width: @index/@total*100vw;
      box-sizing: border-box;
      .fill-area();
  }
  
  // next iteration
  .loop-grid-widths((@index - 1), @total);
}

.loop-grid-widths(@grid-columns);
